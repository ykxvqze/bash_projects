#!/usr/bin/env bash

<< 'EOF'
Delete an element from a CSV list

USAGE:
    ./delete <-i index> <CSV list>

OUTPUT:
    - A CSV list that excludes the element at the specified index
    - Note: index count starts at 1

EXAMPLES:
    ./delete -i 2 1,2,3,4,5           # result: 1,3,4,5
    echo 1,2,3,4,5 | ./delete -i 2    # result: 1,3,4,5
EOF

__print_usage     () { :; }
__del             () { :; }
__parse_arguments () { :; }
__check_arguments () { :; }
__check_index     () { :; }
__apply_delete    () { :; }
__main            () { :; }

__print_usage() {
    echo -e "Delete an element from a CSV list.

    USAGE:
          ./delete -i 2 1,2,3,4,5
          echo 1,2,3,4,5 | ./delete -i 2 \n"
}

__del() {
<< 'EOF'
    # index: integer
    # list : csv list
EOF
    index="${1}"
    list="${2}"

    OFS="${IFS}"
    IFS=','
    arr=($list)

    i="$((index-1))"
    unset arr["$i"]

    for i in "${arr[@]}"; do
        echo -n "${i},"
    done | rev | cut -c 2- | rev

    IFS="${OFS}"
}

__parse_arguments() {
    args=()
    while [ "$#" -gt 0 ]; do
        case "${1}" in
            -h ) __print_usage; exit 0;;
            -i ) index="${2}"; shift; shift ;;
            -* ) echo "Unknown option ${1}. Exiting ..."; exit 1;;
             * ) args+=("${1}"); shift;;
        esac
    done
}

__check_arguments() {
    if [ -z "$index" ]; then
        echo 'Index not provided!'
        exit 1 
    fi

    if [[ ! "${index}" =~ ^[1-9][0-9]*$ ]]; then
        echo 'Index should be an integer.'
        exit 1
    fi

    argf="${args[0]}"
    if [ -n "${argf}" ]; then
        f="$(echo "${argf}")"
    else
        f="$(</dev/stdin)"
    fi
}

__check_index() {
    n_list="$(echo "${f}" | tr ',' '\n' | wc -l)"
    if [ "${index}" -lt 1 -o "${index}" -gt "${n_list}" ]; then
        echo 'Index out of range!'
        exit 1
    fi
}

__apply_delete() {
    __del "${index}" "${f}"
}

__main() {
    __parse_arguments "$@"
    __check_arguments
    __check_index
    __apply_delete
}

if [[ "${BASH_SOURCE[0]}" == "${0}" ]]; then
    __main "$@"
fi
